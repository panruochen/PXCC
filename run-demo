#!/bin/bash

set -e

function executable_get()
{
	if [ -r make.exe ]; then
		echo make.exe
	else
		echo make
	fi
}

function prepare()
{
	if [ -d ${TARGET} ]; then
		rm -rf ${TARGET}/
	fi
	d=$(dirname  ${TARGET})
	f=$(basename ${TARGET})
	(	cd "$d"
		suffix=tar.bz2
		ft="$f-configured"
		if [ -f ${ft}.${suffix} ]; then
			f=${ft}
			tar xfj $f.${suffix}
		else
			tar xfj $f.${suffix}
			cd $f
			./configure
			git=$(which git 2>/dev/null)
			if [ "x$git" != x ]; then
				git init && git add . && git rm -rf --cached .deps && git commit -a -m 'v1'
			fi
			cd ..
			tar cfj $ft.$suffix $f
		fi
	)
	HAVE_CONFIGURED=y
}

function step1()
{
	TIME=$(env LANG=en_US date)

	if [ x$HAVE_CONFIGURED != xy ]; then
		./configure
	fi
	HAVE_CONFIGURED=y
	make
	yMAKE=$(executable_get)
	objcopy -O binary $yMAKE yy-1.bin
	objdump -d $yMAKE > yy-1.asm
}

function step2()
{
	make clean
#	../../y-Make --yz-cc=gcc --yz-save-cl=gMake-commands.txt --yz-shell=bash --yz-save-dep=gMake-depends.txt --yz-save-condvals=gMake-condvals.txt ##--yz-postprocess
	../../y-Make --yz-cc=gcc --yz-shell=bash --yz-start-server="" --yz-server-addr=/var/tmp/cl-server --yz-postprocess=$HOME/@cl-Make
#	../../y-Make --yz-cc=gcc --yz-shell=bash --yz-postprocess=$HOME/@cl-Make
	yMAKE=$(executable_get)
	objcopy -O binary $yMAKE yy-2.bin
	objdump -d $yMAKE > yy-2.asm
}

#--------------------------------------------------------------------#
#
#
#--------------------------------------------------------------------#
PACKAGE=make-3.81
#PACKAGE=util-linux-2.20
TARGET=testsuites/${PACKAGE}

prepare
cd ${TARGET}
step1
step2

